%implements s4_b0_q0k1c_0_Update "C"

%function Update(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
if (%<(SLibCGIRIsSampleHit(1, 3))>) {
    /* {S!d814}Update for UnitDelay: '<Root>/Unit Delay' */
    localDW->UnitDelay_DSTATE = localB->Sum1;
    /* {S!d816}Update for DiscreteIntegrator: '<Root>/Discrete-Time Integrator' */
    localDW->DiscreteTimeIntegrator_DSTATE = CPS_Eva_P.DiscreteTimeIntegrator_gainval * localB->Gain3 + localB->DiscreteTimeIntegrator;
    /* {S!d818}Update for DiscreteIntegrator: '<Root>/Discrete-Time Integrator1' */
    localDW->DiscreteTimeIntegrator1_SYSTEM_ENABLE = 0U;
    localDW->DiscreteTimeIntegrator1_DSTATE = CPS_Eva_P.DiscreteTimeIntegrator1_gainval * localB->DiscreteTimeIntegrator + localB->DiscreteTimeIntegrator1;
}
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Update", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Update"))
%<SLibCG_AccessArg(0, 4, 0)>
%endif
%if SLibCG_ArgAccessed(0, 4, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Update", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Update"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 4, 0)>
%endif
%endfunction
%function UpdateFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void CPS_Eva_Update(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 4, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("CPS_Eva_Update", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>B_CPS_Eva_c_T *localB\
%assign comma = ", "
%<comma>DW_CPS_Eva_f_T *localDW\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 4, fcnProtoType)>
%endfunction
